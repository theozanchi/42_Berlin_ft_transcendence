services:
  nginx:
    container_name: nginx
    image: nginx:latest # Based on debian:bookworm-slim
    entrypoint: [ "bash", "/tmp/entrypoint.sh" ]
    volumes:
      - ./nginx:/tmp
      - ${CERTS_DIR}:/etc/letsencrypt
      - ./static:/usr/share/nginx/html/static
    networks:
      - frontend
      - backend
    ports:
      - "${PORT}:80"
      - "${SPORT}:443"
    environment:
      - NODE_ENV=${NODE_ENV}
      - SERVER_NAME=${SERVER_NAME}
    depends_on:
      - frontend
      - api_gateway

  frontend:
    container_name: frontend
    image: nginx:latest # Based on debian:bookworm-slim
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    networks:
      - frontend

  db:
    image: postgres:latest # Based on debian:bookworm-slim
    container_name: db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  api_gateway:
    image: api_gateway_service
    container_name: api_gateway
    build: ./backend/api_gateway
    volumes:
      - ./backend/api_gateway:/code
      - ./static:/usr/share/static
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SERVER_NAME=${SERVER_NAME}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
    networks:
      - backend
    depends_on:
      - redis
      - game_logic
      - game_manager
      - authentication

  redis:
    image: redis:latest # Based on debian:bookworm-slim
    container_name: redis
    environment:
    - REDIS_PASSWORD=${REDIS_PASSWORD}  # Set Redis password if needed
    - REDIS_MAXCLIENTS=10000            # Example: Set maximum clients
    - REDIS_MAXMEMORY=2GB               # Example: Set maximum memory
    - REDIS_MAXMEMORY_POLICY=volatile-lru 
    - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - backend

  game_logic:
    image: game_logic_service # Based on debian:bookworm-slim
    container_name: game_logic
    build: ./backend/game_logic_service
    volumes:
      - ./backend/game_logic_service:/code
      - ./static:/usr/share/static
    networks:
      - backend
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db

  game_manager:
    image: game_manager_service # Based on debian:bookworm-slim
    container_name: game_manager
    build: ./backend/game_manager_service
    volumes:
      - ./backend/game_manager_service:/code
      - ./static:/usr/share/static
    networks:
      - backend
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db

  authentication:
    image: authentication_service # Based on debian:bookworm-slim
    container_name: authentication
    build: ./backend/authentication_service
    volumes:
      - ./backend/authentication_service:/code
      - ./static:/usr/share/static
    networks:
      - backend
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db

networks:
  frontend:
  backend: